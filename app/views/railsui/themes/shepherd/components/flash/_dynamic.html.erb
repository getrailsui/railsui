<div id="flash-dynamic">
<%= render layout: example, locals: { heading: "Dynamic", section: "Flash" } do %>
  <div class="prose dark:!prose-invert max-w-full mb-6">
    <p>For some flash messages you may want to have them hide after a brief period. This requires JavaScript but is fairly simple to implement with Stimulus.js or Vanilla JavaScript.</p>
  </div>

<%= render preview 'zinc' do %>
<div class="bg-secondary-600 text-white text-center p-4" role="alert" data-controller="alert">
   <p>A message commonly displayed after something changes.</p>
</div>
<% end %>

<% content_for :example, flush: true do %>
<% content_for :html, flush: true do %>
<div class="bg-secondary-600 text-white text-center p-4" role="alert" data-controller="alert">
  <p>A message commonly displayed after something changes.</p>
</div>
<% end %>

<% content_for :erb, flush: true do %>
<%% if notice %>
<div class="bg-secondary-600 text-white text-center p-4" role="alert" data-controller="alert">
  <p><%%= sanitize notice %></p>
</div>
<%% end %>
<% end %>

<% content_for :haml, flush: true do %>
- if notice
  .bg-indigo-600.text-white.text-center.p-4{"data-controller" => "alert", :role => "alert"}
    %p= sanitize notice
<% end %>

<% content_for :js, flush: true do %>
import { Controller } from "@hotwired/stimulus"

export default class extends Controller {
  connect() {
    if (this.element) {
      setTimeout(() => {
        this.element.remove()
      }, 4000)
    }
  }
}
<% end %>

  <%= render_snippet active_tab: "js", js_filename: "alert_controller.js" %>
<% end %>
<% end %>
</div>
