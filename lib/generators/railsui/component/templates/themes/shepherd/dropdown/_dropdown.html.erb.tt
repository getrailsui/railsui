<%%# locals: ( button: { label: "More", icon: "chevron-down", classes: "btn btn-white" }, menu_classes: nil,items:, controller: "railsui-dropdown", content: nil) %>

<%%# Dropdown Component
Props:
- button: (Hash) Button config.
    - :label (String, required)
    - :icon (Hash, optional)
        - :name (String, required)
        - :classes (String, optional)
        - :variant (:solid or :outline, optional)
        - :position (:start or :end, default: :end)
    - :classes (String, optional)
- menu_classes: (String, optional) Additional Tailwind classes for customizing dropdown menu appearance
- items: (Array) Dropdown menu items.
    Supports:
      - Flat list: [item, item, item]
      - Grouped list: [[item, item], [item]], divider displays between
    Each item supports:
      - :name (String, required)
      - :url (String, optional)
      - :icon (Hash, optional — same structure as button icon)
      - :method (Symbol, optional — e.g. :post)
      - :data (Hash, optional — e.g. { turbo: false })
- controller: Pass a custom stimulus controller.
    - Notes: This defaults to railsui-dropdown. If you used the --stimulus option pass `dropdown` here instead of `railsui-dropdown` to inherit from RailsuiDropdown from the railsui-stimulus library.

Usage:
rui :dropdown,
  button: {
    label: "More",
    icon: { name: "chevron-down", classes: "size-3", position: :end },
    classes: "btn btn-primary"
  },
  menu_classes: "right-0 top-full",
  items: [
    [
      { name: "Profile", url: profile_path, icon: { name: "user", position: :start } },
      { name: "Settings", url: settings_path }
    ],
    [
      { name: "Logout", url: logout_path, method: :delete, data: { turbo: false }, icon: { name: "logout", position: :end } }
    ]
  ]

With custom controller: (i.e. rails g railsui:dropdown --stimulus)
 rui :dropdown,
  controller: "dropdown", # pass "dropdown" controller name to extend defaults.
  button: {
    label: "Start Icon",
        icon: { name: "user", classes: "size-4 text-blue-500", position: :start },
        classes: "btn btn-white"
      },
  items: [
    { name: "Dashboard", url: "#" },
    { name: "Settings", url: "#" }
  ]
%>

<%% is_grouped = items.first.is_a?(Array) %>
<%% dropdown_icon = button[:icon] %>
<%% label = button[:label] %>
<%% button_classes = button[:classes] || "btn btn-white" %>
<%% controller_name = local_assigns[:controller] || 'railsui-dropdown' %>

<div class="relative" data-controller="<%%= controller_name %>">
  <button
  type="button"
  class="<%%= button_classes %> flex gap-3 items-center <%%= dropdown_icon&.dig(:position) == :start ? "justify-start" : "justify-between" %>"
  data-action="click-><%%= controller_name %>#toggle click@window-><%%= controller_name %>#hide">
    <%% if dropdown_icon&.dig(:position) == :start %>
      <%%= icon(dropdown_icon&.dig(:name) || "chevron-down", class: dropdown_icon&.dig(:classes) || "size-3") %>
    <%% end %>
    <%%= label %>
    <%% if dropdown_icon.nil? || dropdown_icon[:position] != :start %>
      <%%= icon(dropdown_icon&.dig(:name) || "chevron-down", class: dropdown_icon&.dig(:classes) || "size-3") %>
    <%% end %>
  </button>

  <div
    data-<%%= controller_name %>-target="menu"
    class="hidden <%%= menu_classes.presence || 'origin-top-left left-0 top-12 absolute dropdown-menu' %>"
    data-transition-enter-from="opacity-0 scale-95"
    data-transition-enter-to="opacity-100 scale-100"
    data-transition-leave-from="opacity-100 scale-100"
    data-transition-leave-to="opacity-0 scale-95">

    <%% if is_grouped %>
      <div class="divide-y divide-slate-200 dark:divide-slate-700">
        <%% items.each do |group| %>
          <ul>
            <%% group.each do |item| %>
              <li>
                <%% if item[:method] %>
                  <%%== button_to item[:name], item[:url],
                    method: item[:method],
                    data: item[:data] || {},
                    class: "dropdown-item" %>
                <%% else %>
                  <%%= link_to item[:url],
                    class: "dropdown-item flex items-center gap-3 #{item[:icon]&.dig(:position) == :start ? "justify-start" : "justify-between"}",
                    data: item[:data] || {} do %>
                    <%% if item[:icon]&.dig(:position) == :start %>
                      <%%= icon(item[:icon][:name], class: item[:icon][:classes] || 'shrink-0 size-4') %>
                    <%% end %>
                    <%%= item[:name] %>
                    <%% if item[:icon]&.dig(:position) == :end %>
                      <%%= icon(item[:icon][:name], class: item[:icon][:classes] || 'shrink-0 size-4') %>
                    <%% end %>
                  <%% end %>
                <%% end %>
              </li>
            <%% end %>
          </ul>
        <%% end %>
      </div>
    <%% else %>
      <ul>
        <%% items.each do |item| %>
          <li>
            <%% if item[:method] %>
              <%%== button_to item[:name], item[:url],
                method: item[:method],
                data: item[:data] || {},
                class: "dropdown-item" %>
            <%% else %>
              <%%= link_to item[:url],
                class: "dropdown-item flex items-center gap-2 #{item[:icon]&.dig(:position) == :start ? "justify-start" : "justify-between"}",
                data: item[:data] || {} do %>
                <%% if item[:icon]&.dig(:position) == :start %>
                  <%%= icon(item[:icon][:name], class: item[:icon][:classes] || 'shrink-0 size-4') %>
                <%% end %>
                <%%= item[:name] %>
                <%% if item[:icon]&.dig(:position) == :end %>
                  <%%= icon(item[:icon][:name], class: item[:icon][:classes] || 'shrink-0 size-4') %>
                <%% end %>
              <%% end %>
            <%% end %>
          </li>
        <%% end %>
      </ul>
    <%% end %>
  </div>
</div>
